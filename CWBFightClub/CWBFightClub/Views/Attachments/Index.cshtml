@model Student

@{
    ViewData["Title"] = "Student Entry";
}

<!-- Edit Menu Buttons -->

<div class="row">
    <div class="col-md-10">

    </div>

    <div class="container" id="editstudent_tabmenu">
        <ul class="nav nav-tabs">

            <li>
                <a asp-action="Edit" asp-controller="Student" asp-route-id="@Model.StudentID">
                    <div class="button" id="editbtn">
                        <div id="translate"></div>
                        <div id="buttonani">Details</div>
                    </div>
                </a>
            </li>

            <li>
                <a asp-action="Student" asp-controller="Payment" asp-route-id="@Model.StudentID">
                    <div class="button" id="paymentbtn">
                        <div id="translate"></div>
                        <div id="buttonani">Payments</div>
                    </div>
                </a>
            </li>

            <li>
                <a asp-action="Student" asp-controller="Enrollment" asp-route-id="@Model.StudentID">
                    <div class="button" id="discbtn">
                        <div id="translate"></div>
                        <div id="buttonani">Disciplines</div>
                    </div>
                </a>
            </li>

            <li>
                <a asp-action="Attendance" asp-controller="Student" asp-route-studentId="@Model.StudentID">
                    <div class="button" id="historybtn">
                        <div id="translate"></div>
                        <div id="buttonani">Attendance</div>
                    </div>
                </a>
            </li>

            <li>
                <div class="button" id="documentsbtn">
                    Attachments
                    <div class="btnsel_line"></div>
                </div>
            </li>

            <li>
                <a asp-action="Student" asp-controller="Guardian" asp-route-studentid="@Model.StudentID">
                    <div class="button" id="guardianbtn">
                        <div id="translate"></div>
                        <div id="buttonani">Guardians</div>
                    </div>
                </a>
            </li>
        </ul>
        <br>
    </div>
</div>

    @using (Html.BeginForm("CreateFile", "Student", new { StudentID = Model.StudentID }, FormMethod.Post, false, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <center><h2>Upload Document for @Model.FirstName @Model.LastName</h2></center>
            <hr />

            <div class="form-group">
                @Html.Label("", "Document / Photo ", new { @class = "control-label" })
                
                <input style="width: 250px;" class="form-control rounded-0" type="file" id="Avatar" name="upload" /><br />
                

                <div class="form-group">
                    @Html.Label("", "Filename (leave empty for default)", new { @class = "control-label" })<br />
                    <input class="form-control rounded-0" type="text" id="filename" name="filename" cols="50" maxlength="60" style="width: 250px;" />
                </div>

                <div class="form-group">
                    <label class="control-label">Filetype</label>
                    <select id="type" name="type" class="form-control rounded-0" style="width:250px;">
                        <option value="@FileType.Photo">@FileType.Photo</option>
                        <option value="@FileType.Pdf">@FileType.Pdf</option>
                    </select>
                </div>

                <div class="form-group">
                    @Html.Label("", "Comment", new { @class = "control-label" })<br />
                    <textarea class="form-control rounded-0" style="width: 400px;"  id="comment" name="comment" rows="4" cols="50" maxlength="300"></textarea>
                </div>
            </div>

            <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-secondary btn-sm" />
            </div>

        </div>
    }

    <br />

    <dt>
        Available Documents:
    </dt>

    <br />

    @if (Model.FilePaths.Any(f => f.FileType == FileType.Photo) || Model.FilePaths.Any(f => f.FileType == FileType.Pdf))
    {
        <dd>
            <table class="attachmenttable">
                <tr>
                    @foreach (var img in Model.FilePaths)
                    {
                        <td>
                            <div style="height: 180px;">
                                @if (img.FileType == FileType.Photo)
                                { 
                                <a href="~/Images/@img.FileName" target="_blank">
                                    <img width="175" height="175" border="0" src="~/Images/@img.FileName" />
                                </a>
                                }
                                else if (img.FileType == FileType.Pdf)
                                {
                                    <embed src="~/Images/@img.FileName" width="175" height="175"/>
                                }
                            </div>


                            <br />
                            @*@if (img.FileType == FileType.Pdf)
                            {
                                <a class="btn btn-secondary btn-sm" href="~/Images/@img.FileName" target="_blank">Open Pdf</a>
                            }*@
                            <a href="~/Images/@img.FileName" download="@img.FileName" title="@img.FileName" class="btn btn-secondary btn-sm">Download</a>
                            <a class="btn btn-secondary btn-sm" asp-action="Edit" asp-controller="FilePaths" asp-route-id="@img.FilePathId">Edit</a>
                            <a class="btn btn-danger btn-sm" asp-action="Delete" asp-controller="FilePaths" asp-route-id="@img.FilePathId">Delete</a>

                            @{var txt = @img.FileName.ToString();

                                if (txt.Length > 24)
                                {
                                    txt = txt.Substring(0, 24) + "...";
                                    ViewBag.filenamesub = txt;
                                }
                                else
                                {
                                    ViewBag.filenamesub = txt;
                                }
                            }

                            @if (@img.Comment != null)
                            {
                                var comment = @img.Comment;

                                if (comment.Length > 140)
                                {
                                    comment = comment.Substring(0, 140) + "...";
                                    ViewBag.comment = comment;
                                }
                                else
                                {
                                    ViewBag.comment = img.Comment;
                                }
                            }

                            <div><font size="2pt"><b>@ViewBag.filenamesub</b></font></div>
                            <div><font size="2pt"><b>Type:</b> @img.FileType</font></div>
                            <div><font size="2pt"><b>Created:</b> @img.DateCreated</font></div>
                            <div style="max-width: 200px;"><font size="2pt"><b>Comments:</b> @ViewBag.comment</font></div>
                        </td>
                    }
                </tr>
            </table>
        </dd>
    }

    @section Scripts {
        @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
        <script src="~/js/alterDateValidationForDOB.js"></script>
    }
